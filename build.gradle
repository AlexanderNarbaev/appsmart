plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
}

group = 'com.appsmart'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('testcontainersVersion', "1.15.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.5.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.2'
//    implementation 'org.springframework.boot:spring-boot-starter-security:2.5.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.2'

    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.9'
//    implementation group: 'org.springdoc', name: 'springdoc-openapi-security', version: '1.5.9'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-data-rest', version: '1.5.9'

    implementation 'org.flywaydb:flyway-core:7.11.2'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    developmentOnly 'org.springframework.boot:spring-boot-devtools:2.5.2'
    runtimeOnly 'org.postgresql:postgresql:42.2.23.jre7'
    runtimeOnly 'com.h2database:h2:1.4.200'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.5.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.2'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.5.RELEASE'
    testImplementation 'org.springframework.security:spring-security-test:5.5.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.15.3'
    testImplementation 'org.testcontainers:postgresql:1.15.3'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}
